#!/bin/bash

# Wrapper around AWS session manager for instance access and SSH tunnels

programname=$0
version=1.0.6

# Defaults
action=ssh
aws_region=us-east-1
aws_profile=''
port=9999
interactive_mode=0

version() {
  echo "${version}"
}

usage() {
  echo "Usage:"
  echo ""
  echo "$programname -a ssh|tunnel -n <instance name> [-r region] [-p profile name] [-o port] [-i] [-h] [-v]"
  echo ""
  echo "  -a   Connect interactive session or establish ssh tunnel (default: ssh)"
  echo "  -n   Value for the Name tag of an EC2 instance"
  echo "  -r   AWS region (default: us-east-1)"
  echo "  -p   AWS profile (default: none)"
  echo "  -o   Local ssh tunnel port (only applicable in tunnel mode; default: 9999)"
  echo "  -i   Enable interactive mode"
  echo "  -h   Display this help"
  echo "  -v   Display version"
  exit 1
}

compareable_version() {
  echo "$@" | awk -F. '{ printf("%d%03d%03d%03d\n", $1,$2,$3,$4); }';
}

get_instances_by_name_tag() {
  name_tag=$1
  region=$2
  profile=$3

  instance_ids_list=$(aws ec2 describe-instances \
    --filters "Name=tag:Name,Values=${name_tag}" "Name=instance-state-name,Values=running"  \
    --query 'Reservations[].Instances[].InstanceId' \
    --output text \
    --region "${region}" \
    --profile "${profile}")

  echo "${instance_ids_list}"
}

# get the options and set flags
while getopts "a:n:r:p:o:ihv" OPTION; do
  case $OPTION in
  v)
    version
    exit 0
    ;;
  h)
    usage
    exit 1
    ;;
  a)
    action=$OPTARG
    ;;
  r)
    aws_region=$OPTARG
    ;;
  p)
    aws_profile=$OPTARG
    ;;
  n)
    tag_value=$OPTARG
    ;;
  o)
    port=$OPTARG
    if [ "${port}" -le 1024 ]; then
      echo "Port must be greater than 1024"
      exit 1
    fi
    ;;
  i)
    interactive_mode=1
    ;;
  *)
    echo "Incorrect options provided"
    exit 1
    ;;
  esac
done

# Make sure there is a version of the AWS CLI that supports session manager
minimum_aws_cli_version=1.16.299
current_aws_cli_version=$(aws --version 2>&1 | awk '{split($1,array,"/")} END {print array[2]}')

if [ "$(compareable_version "${current_aws_cli_version}")" -lt "$(compareable_version "${minimum_aws_cli_version}")" ]; then
  echo "Error: AWS CLI version must be greater than ${minimum_aws_cli_version}. Please update your aws cli (pip install awscli --upgrade or brew upgrade awscli)"
  exit 1
fi

# Check to make sure the session manager plugin is installed
if [ ! -e /usr/local/bin/session-manager-plugin ]; then
  echo "AWS SessionManagerPlugin is not found - installing"
  echo "See the AWS Session Manager Plugin Docs for more information: http://docs.aws.amazon.com/console/systems-manager/session-manager-plugin-not-found"

  echo "Downloading session manager..."
  curl -s "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/mac/sessionmanager-bundle.zip" -o "/tmp/sessionmanager-bundle.zip"

  echo "Extracing session manager..."
  pushd /tmp || exit 1
  unzip /tmp/sessionmanager-bundle.zip
  popd || exit 1

  echo "Installing (this will require you to login to your mac)..."
  sudo /tmp/sessionmanager-bundle/install -i /usr/local/sessionmanagerplugin -b /usr/local/bin/session-manager-plugin
  rm -rf /tmp/sessionmanager-bundle*
fi

# Check for mandatory args
if [ -z "${tag_value}" ]; then
  usage
  exit 1
else
  # Get the list of instances
  instance_ids=$(get_instances_by_name_tag "${tag_value}" "${aws_region}" "${aws_profile}")

  if [ -z "${instance_ids}" ]; then
    echo "No instances available named ${tag_value} in region ${aws_region}"
  else
    if [ "${interactive_mode}" -eq 1 ]; then
      echo "Select an instance to connect to"

      inst_num=1
      for instance in ${instance_ids}
      do
        echo "${inst_num}) ${instance}"
        inst_num=$(( inst_num + 1 ))
      done

      num_instances=$(( inst_num - 1))

      echo -n "(default is 1): "
      read -r choice_num

      if [ -z "${choice_num}" ]; then
        choice_num=1
      elif [ ${choice_num} -gt ${num_instances} ]; then
        echo "Input must be between 1 and ${num_instances}"
        exit 1
      fi

      instance_id=$(echo "${instance_ids}" | awk -v field_num="${choice_num}" '{print $field_num}')
    else
      # We only need one instance
      instance_id=$(echo "${instance_ids}" | cut -f1) 
    fi

    # SSH or tunnel
    if [ "${action}" == "ssh" ]; then
      echo "Establishing session manager connection to ${tag_value} (${instance_id})"
      aws ssm start-session \
        --target "${instance_id}" \
        --region "${aws_region}" \
        --profile "${aws_profile}"
    elif [ "${action}" == "tunnel" ]; then
      echo "Creating SSH tunnel to ${tag_value} (${instance_id})"
      aws ssm start-session \
        --target "${instance_id}" \
        --document-name AWS-StartPortForwardingSession \
        --parameters "{\"portNumber\":[\"22\"],\"localPortNumber\":[\"${port}\"]}" \
        --region "${aws_region}" \
        --profile "${aws_profile}"
    else
      echo "Unknown action ${action} specified"
      usage
      exit 1
    fi
  fi
fi